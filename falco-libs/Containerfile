FROM fedora:41

RUN dnf install -y \
    gcc \
    gcc-c++ \
    ccache \
    libasan \
    libubsan \
    bpftool \
    libbpf-devel \
    dnf-plugins-core \
    git \
    make \
    cmake \
    autoconf \
    automake \
    pkg-config \
    patch \
    ncurses-devel \
    libtool \
    elfutils-libelf-devel \
    diffutils \
    which \
    perl-core \
    clang \
    procps \
    python3-pip \
    kmod \
    podman \
    podman-docker \
    zsh \
# Debugging packages
    gdb \
    clang-analyzer \
    clang-tools-extra \
# Dependencies for falcosecurity/testing
    golang \
# Dependencies needed to build falcosecurity/libs.
    libb64-devel \
    c-ares-devel \
    libcurl.x86_64 \
    libcurl-devel.x86_64 \
    grpc-cpp \
    grpc-devel \
    grpc-plugins \
    jq-devel \
    jsoncpp-devel \
    openssl-devel \
    tbb-devel \
    xz \
    zlib-devel && \
    dnf clean all && \
# Set some symlinks to allow building of drivers.
    kernel_version=$(uname -r) && \
    ln -s "/host/lib/modules/$kernel_version" "/lib/modules/$kernel_version" && \
    ln -s "/host/usr/src/kernels/$kernel_version" "/usr/src/kernels/$kernel_version" && \
# Install emscripten
    git clone https://github.com/emscripten-core/emsdk.git && \
    cd emsdk && ./emsdk install latest && \
    ./emsdk activate latest && \
    echo 'export EMSDK_QUIET=1' >> /root/.bashrc && \
    echo 'source /emsdk/emsdk_env.sh' >> /root/.bashrc && \
# Clone my configuration
    git clone https://github.com/molter73/dotfiles "${HOME}/.config" && \
# Install NeoVim
    curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim-linux64.tar.gz && \
    tar -C /opt -xzf nvim-linux64.tar.gz && \
    rm -f nvim-linux64.tar.gz && \
# Install starship.rs
    curl -sS https://starship.rs/install.sh | sh -s -- --yes && \
# Install my configuration
    "${HOME}/.config/zsh/install.sh" && \
    /opt/nvim-linux64/bin/nvim --headless "+Lazy! restore" +qa

COPY clangd.yaml /root/.config/clangd/config.yaml
COPY compile-falco.sh /usr/local/bin/
COPY compile-libs.sh /usr/local/bin/

ENTRYPOINT ["/usr/bin/zsh"]
